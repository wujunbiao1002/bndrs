A:概述:
	 一主多从，可以缓解读的压力，但是一旦主宕机了，就不能写了；
	所以我们可以采用双主双从架构

架构规划：
	主master 3307 ---> 从slave 3309 
	主master 3308 ---> 从slave 3310
	3307 <---> 3308 互为主从
	2个写节点，每个写节点下又是2个读节点；

2.初始数据库数据相同
3. 备份/etc/my.cnf
4.与一主多从一样，所有节点配置文件加上binlog配置
    3307配置:
	log-bin=mysql-bin	//启用二进制日志
	server-id=3307		//服务器唯一ID，默认是1，为方便辨认取IP最后一段

	3308配置:
	log-bin=mysql-bin
	server-id=3308

	3309配置:
	server-id=3309

	3310配置:
	server-id=3310

	注意:这里我们是把3307 3308 互为主(主从)
	log-bin=mysql-bin
	server-id=实例的端口（server-id要唯一）

5.第一台主服务器3307的my.cnf文件增加如下配置：(Master 3307)
    auto_increment_increment=2	#步进值auto_imcrement。一般有n台主MySQL就填n
	auto_increment_offset=1		#起始值。一般填第n台主MySQL。此时为第一台主MySQL
	log-slave-updates			
	sync_binlog=1
	
 第二台主服务器3308的my.cnf文件增加如下配置：(Master 3308)
	auto_increment_increment=2
	auto_increment_offset=2
	log-slave-updates
	sync_binlog=1
 C:配置项说明:
	auto_increment_increment，控制主键自增的自增步长，用于防止Master与Master之间复制出现重复自增字段值，通常auto_increment_increment=n，有多少台主服务器，n 就设置为多少；
	auto_increment_offset＝1设置自增起始值，这里设置为1，这样Master的auto_increment字段产生的数值是：1, 3, 5, 7, …等奇数ID
	注意auto_increment_offset的设置，不同的master设置不应该一样，否则就容易引起主键冲突，比如master1的offset=1，则master2的offset=2，master3的offset=3
	在双主模式中，log-slave-updates 配置项一定要配置，否则在master1（3307）上进行了更新数据，在master2（3308）和slave1（3309）上会更新，但是在slave2（3310）上不会更新
	sync_binlog表示每几次事务提交，MySQL把binlog缓存刷进日志文件中，默认是0，最安全的是设置为1；

6.重启所有mysql，使配置生效:systemctl restart mysqld

5.在主Mysql上建立mysync帐户并授权为Slave:
	在两台主服务器上创建复制账号并授权：（3307、3308）
	使用端口、主机登录进入两台主MySQL：
	./mysql -uroot -p -P3307 -h127.0.0.1
	./mysql -uroot -p -P3308 -h127.0.0.1
	在主服务器上创建复制数据的账号并授权：(copy为名字:建议先按教程写:熟悉之后随意更改 123456 是密码)
	grant replication slave on *.* to 'copy'@'%' identified by '123456';
	grant replication slave on *.* to 'backup'@'%' identified by 'wujunbiao'; 
	
	%表示来自所有ip的mysync账户的slave连接请求都可以被允许，实际上为了安全我们一般会指定特定的ip，比如本例子里用只允许192.168.1.2访问，用192.168.1.2替换%即可。

6.在主服务器上查看二进制日志文件和Position值：（3307、3308）
    在MySQL命令行执行：
    即在3307和3308上分别执行：show master status;
	记住File和Position的值，后面要用。
	主从复制的原理是Master的binlog日志中记录所有mysql信息修改，然后Slave通过分析Master的binlog日志获得要同步的内容，所以这里要查询的信息就是——要从哪个File同步，并且从哪个Position开始同步，明白了吧。
	请注意，到这里以后，请不要再对Master做任何配置或者数据的修改，直到Slave配置完成！不然会出现信息同步错误。
	
7、在Slave上设置Master（相当于是4台都需要设置）
   设置从服务器3308、3309，他们的主均为3307，即在3308和3309上执行如下操作：
	change master to master_host='192.168.91.135',
	master_user='copy',
	master_password='123456',
	master_port=3307,
	master_log_file='mysql-bin.000001',
	master_log_pos=154;
	 
	设置从服务器3307、3310，他们的主均为3308，即在3307和3310上执行如下操作：
	change master to master_host='192.168.91.135',
	master_user='copy',
	master_password='123456',
	master_port=3308,
	master_log_file='mysql-bin.000001',
	master_log_pos=154; 
	或者
	change master to master_host='192.168.141.128',master_user='backup',master_password='wujunbiao',master_log_file='mysql-bin.000002',master_log_pos=909; 
	change master to master_host='192.168.141.129',master_user='backup',master_password='wujunbiao',master_log_file='mysql-bin.000002',master_log_pos=909; 

8、在四台MySQL服务器上执行：start slave; （MySQL命令行执行）
	执行后即开始进入主从复制状态
	
9.双主双从验证:
	检查从服务器复制功能状态，执行命令：
	mysql> show slave status \G
	如果Slave_IO_Running和Slave_SQL_Running的值为Yes，即表示复制功能配置正常；

4、在从服务器上停止复制：（3309、3310）

      在MySQL命令行执行：

	stop slave;
	reset slave;
	reset master;
	设置好双主双从复制后：
	1. 一个主出现问题，可以切换到另外的主进行写数据，新主同步数据给它的从；
	2. 待问题旧主恢复服务后，新的主会同步数据给它，它再同步数据给自己的从，这样不会出现数据的不同步和服务的不可用。